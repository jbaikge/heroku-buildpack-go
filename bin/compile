#!/bin/sh
# usage: bin/compile <build-dir> <cache-dir>

set -e

mkdir -p "$1" "$2"

build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
ver=weekly.2012-02-07
if test -f $build/hack-goversion
then ver=$(cat $build/hack-goversion)
fi

pkg_path=go.$ver.linux-amd64

echo "-----> Using Go $ver"

(
    set -e

    # Already cached?
    test -d $cache/$pkg_path/go && exit

    rm -rf $cache/* # be sure not to build up cruft
    mkdir -p $cache/$pkg_path
    cd $cache/$pkg_path
    echo "-----> Fetching Go $ver"
    url=http://go.googlecode.com/files/$pkg_path.tar.gz
    curl -sO $url
    tar zxf $pkg_path.tar.gz
    rm -f $pkg_path.tar.gz
)

GOROOT=$cache/$pkg_path/go export GOROOT
GOPATH=$build/.heroku export GOPATH

mkdir -p $GOPATH
cp -R $build/src $GOPATH

unset GIT_DIR # unset git dir or it will mess with go get
echo "-----> Running go get -v all"
cd $GOPATH
$GOROOT/bin/go get -v all

mkdir -p $build/bin
mv $GOPATH/bin/* $build/bin
rm -rf $build/.heroku
